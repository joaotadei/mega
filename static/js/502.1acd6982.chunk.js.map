{"version":3,"file":"static/js/502.1acd6982.chunk.js","mappings":"iQAYA,MAkEA,EAlEgCA,KAC5B,MAAMC,GAAQC,EAAAA,EAAAA,OACR,IAACC,IAAQC,EAAAA,EAAAA,IAASC,IAAK,CAC3BF,IAAKE,EAAMC,YACTC,EAAAA,IAECC,EAAaC,IAAkBC,EAAAA,EAAAA,WAAS,GAEzCC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbC,MAAO,IAETC,kBAAkB,EAClBC,iBAAkBC,EAAAA,GAClBC,SAAUC,UACR,UACQhB,EAAIiB,KAAK,sBAAuBC,GACtCZ,GAAe,EACjB,CAAE,MAAMa,GACN,CACD,QACCX,EAAOY,eAAc,EACvB,KAIIC,GAAoBC,EAAAA,EAAAA,cAAaC,IACnC,MAAMC,EAAOD,EAAEE,OAAOD,KACtBhB,EAAOkB,cAAcF,EAAM,IAC3BhB,EAAOmB,aAAaJ,EAAE,GACvB,CAACf,IAEN,OACEoB,EAAAA,EAAAA,KAACC,EAAAA,EAAa,CAAAC,SAGVzB,GACAuB,EAAAA,EAAAA,KAACG,EAAAA,EAAoB,CACnBC,MAAM,iDACNC,YAAY,mCAEdC,EAAAA,EAAAA,MAACC,EAAAA,EAAU,CAAAL,SAAA,EACPF,EAAAA,EAAAA,KAACQ,EAAAA,GAAI,CAACC,IAAKC,EAAQ,QACnBV,EAAAA,EAAAA,KAACW,EAAAA,GAAU,CAAC,gBAAWC,SAAS,KAAKC,KAAK,KAAKC,MAAO5C,EAAM6C,MAAMD,MAAME,QAAQC,KAAKf,SAAC,0BAGtFF,EAAAA,EAAAA,KAACW,EAAAA,GAAU,CAAC,gBAAWC,SAAS,KAAKM,WAAW,wBAAwBL,KAAK,OAAOM,UAAU,SAASC,WAAW,SAASC,QAAQ,KAAKP,MAAO5C,EAAM6C,MAAMD,MAAME,QAAQC,KAAKf,SAAC,+DAG/KF,EAAAA,EAAAA,KAACsB,EAAAA,EAAK,CACF1B,KAAK,QACL2B,YAAY,SACZF,QAAQ,MACRG,MAAO5C,EAAO6C,OAAO1C,MACrB2C,MAAO9C,EAAO+C,OAAO5C,MACrB6C,SAAUnC,KAEdO,EAAAA,EAAAA,KAAC6B,EAAAA,GAAM,CAACC,QAASA,IAAMlD,EAAOmD,eAAgBC,KAAK,SAASC,SAAUrD,EAAOsD,aAAcb,QAAQ,KAAKc,QAASjE,EAAM6C,MAAMD,MAAME,QAAQC,KAAMmB,aAAW,EAACvB,KAAK,KAAIX,SAAC,qBAK/J,C","sources":["pages/public/RenewPassword/index.tsx"],"sourcesContent":["import { useCallback, useState } from \"react\";\r\nimport { Button, Typography, useTheme } from \"@stardust-ds/react\";\r\nimport Input from \"components/Input\";\r\nimport { useFormik } from \"formik\";\r\nimport useStore from \"hooks/useStore\";\r\nimport { shallow } from \"zustand/shallow\";\r\nimport { Logo } from \"styles/global\";\r\nimport { emailSchema } from \"validations/yup/publicSchemas\";\r\nimport { AccessCard } from \"components/AccessWrapper/styles\";\r\nimport AccessWrapper from \"components/AccessWrapper\";\r\nimport PublicSuccessMessage from \"components/PublicSuccessCard\";\r\n\r\nconst RenewPassword: React.FC = () => {\r\n    const theme = useTheme();\r\n    const {api } = useStore(state => ({\r\n      api: state.getApi(),\r\n    }), shallow);\r\n  \r\n  const [showMessage, setShowMessage] = useState(false);\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: '',\r\n    },\r\n    validateOnChange: false,\r\n    validationSchema: emailSchema,\r\n    onSubmit: async (data) => {\r\n      try {\r\n        await api.post('auth/renew_password', data);\r\n        setShowMessage(true);\r\n      } catch(err) {\r\n        //\r\n      } finally {\r\n        formik.setSubmitting(false);\r\n      }\r\n    }\r\n  });\r\n\r\n    const handleInputChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const name = e.target.name;\r\n        formik.setFieldError(name, '');\r\n        formik.handleChange(e);\r\n    }, [formik]);\r\n\r\n  return (\r\n    <AccessWrapper>\r\n\r\n      {\r\n        showMessage?\r\n        <PublicSuccessMessage\r\n          title=\"Link de recuperação enviado com sucesso!\"\r\n          description=\"Verifique sua caixa de e-mail\"\r\n        /> :\r\n        <AccessCard>\r\n            <Logo src={require('assets/images/logo_mega_3.png')}></Logo>\r\n            <Typography data-title fontSize='lg' mTop=\"md\" color={theme.brand.color.primary.pure}>\r\n                Recuperar sua senha!\r\n            </Typography>\r\n            <Typography data-title fontSize='xs' fontFamily=\"Open Sans, sans-serif\" mTop=\"nano\" textAlign=\"center\" fontWeight=\"normal\" mBottom='sm' color={theme.brand.color.primary.pure}>\r\n                Digite seu email para receber o link de recuperação\r\n            </Typography>\r\n            <Input\r\n                name='email'\r\n                placeholder='E-mail'\r\n                mBottom='xxs'\r\n                value={formik.values.email}\r\n                error={formik.errors.email}\r\n                onChange={handleInputChange}\r\n                />\r\n            <Button onClick={() => formik.handleSubmit()} type='button' disabled={formik.isSubmitting} mBottom='xs' bgColor={theme.brand.color.primary.pure} isFullWidth mTop='sm'>\r\n                Receber link\r\n            </Button>\r\n        </AccessCard>\r\n      }\r\n    </AccessWrapper>\r\n  );\r\n}\r\n\r\nexport default RenewPassword;"],"names":["RenewPassword","theme","useTheme","api","useStore","state","getApi","shallow","showMessage","setShowMessage","useState","formik","useFormik","initialValues","email","validateOnChange","validationSchema","emailSchema","onSubmit","async","post","data","err","setSubmitting","handleInputChange","useCallback","e","name","target","setFieldError","handleChange","_jsx","AccessWrapper","children","PublicSuccessMessage","title","description","_jsxs","AccessCard","Logo","src","require","Typography","fontSize","mTop","color","brand","primary","pure","fontFamily","textAlign","fontWeight","mBottom","Input","placeholder","value","values","error","errors","onChange","Button","onClick","handleSubmit","type","disabled","isSubmitting","bgColor","isFullWidth"],"sourceRoot":""}